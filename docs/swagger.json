{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Films data  server.",
        "title": "absoluteCinema",
        "contact": {
            "email": "amir.kurmanbekov@gmail.com"
        },
        "version": "1.5"
    },
    "basePath": "/",
    "paths": {
        "/auth/sign-in": {
            "post": {
                "description": "This endpoint allows users to authenticate and receive an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in a user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful, returns access token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "409": {
                        "description": "Username already taken",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "This endpoint is responsible for registering a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/films/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all films in the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Get all films",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Film"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This endpoint adds a new film based on the provided JSON data (excluding ID).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Add a new film",
                "parameters": [
                    {
                        "description": "Film data",
                        "name": "film",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FilmInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Film"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/films/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single film based on the provided ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Get a film by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Film ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Film found",
                        "schema": {
                            "$ref": "#/definitions/models.Film"
                        }
                    },
                    "404": {
                        "description": "Film not found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Removes a film from the database based on the provided ID.",
                "tags": [
                    "Films"
                ],
                "summary": "Delete a film by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Film ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Film deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request: ID is required",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Film not found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing film in the database based on the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "summary": "Update a film by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Film ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated film data",
                        "name": "film",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FilmInput"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Film updated successfully"
                    },
                    "400": {
                        "description": "Bad Request: invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Film not found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Film": {
            "type": "object",
            "properties": {
                "box_office": {
                    "type": "integer"
                },
                "budget": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.FilmInput": {
            "type": "object",
            "properties": {
                "box_office": {
                    "type": "integer"
                },
                "budget": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "models.SignInInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "words@mail.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "example": "mypassword123"
                }
            }
        },
        "models.SignUpInput": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "words@mail.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "example": "mypassword123"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "example": "user123"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}